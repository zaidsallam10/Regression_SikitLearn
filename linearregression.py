# -*- coding: utf-8 -*-
"""LinearRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rYlh7QOSnTYMp73K976GJh-V5peGLbbx
"""

import numpy as np
from sklearn.linear_model import LinearRegression
import pandas 
import matplotlib.pyplot as plot
# to split the data
from sklearn.model_selection import train_test_split 
from sklearn import datasets
from sklearn.metrics import mean_squared_error



# model 1



# In this example we will use data set contain two columns (experience and salary) to predict the salary based on the experience
diabetes = datasets.load_diabetes()
print(diabetes.data.shape)
print(diabetes.feature_names)

X_train , X_test , Y_train , Y_test = train_test_split(diabetes.data, diabetes.target, test_size=0.2, random_state=0)

print(X_train[0])
#print(Y_train.shape)

model = LinearRegression()
model.fit(X_train,Y_train)

predected = model.predict(X_test)
print(predected)
print(Y_test.shape)

regression_model_mse = mean_squared_error(predected, Y_test)

regression_model_mse


plot.plot(Y_test,predected,'X')
x = np.linspace(0, 330, 100)
y = x
plot.plot(x, y)
plot.show()




# ================================================================================================================================================================================================







# model 2


data = pandas.read_csv('./query_result.csv')
data.shape
# df= pandas.dataframe(data)
# x = data.loc[:,1]
# y = data[:,2]

df = pandas.DataFrame(data)
x= df[['provider_id']]
# x.shape
y= df[['provider_price']]

X_train , X_test , Y_train , Y_test = train_test_split(x, y, test_size=0.2, random_state=0)

model = LinearRegression()

model.fit(X_train,Y_train)
model.coef_
predicted = model.predict(X_test)
print(predicted)
regression_model_mse = mean_squared_error(predicted, Y_test)
print(regression_model_mse)

plot.plot(x,y)










# ================================================================================================================================================================================================








# model 3  (XOR Example)


X = np.array([[0, 0], [1, 0], [0, 1], [1, 1]])
y = np.array([0, 1, 1, 0])
  
test= np.array([[0, 0], [1, 0], [0, 1], [1, 1]])
model = LinearRegression()
model.fit(X,y)
predicted= model.predict(test)
predicted

plot.plot(test,predicted,"X")